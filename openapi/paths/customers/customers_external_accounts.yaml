get:
  summary: List Customer external accounts
  description: |
    Retrieve a list of external accounts with optional filtering parameters. Returns all
    external accounts that match the specified filters. If no filters are provided, returns all external accounts
    (paginated).

    External accounts are bank accounts, cryptocurrency wallets, or other payment destinations that customers can use to receive funds from the platform.
  operationId: listCustomerExternalAccounts
  tags:
    - External Accounts
  security:
    - BasicAuth: []
  parameters:
    - name: currency
      in: query
      description: Filter by currency code
      required: false
      schema:
        type: string
    - name: customerId
      in: query
      description: Filter by external accounts associated with a specific customer
      required: false
      schema:
        type: string
    - name: limit
      in: query
      description: Maximum number of results to return (default 20, max 100)
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    - name: cursor
      in: query
      description: Cursor for pagination (returned from previous request)
      required: false
      schema:
        type: string
  responses:
    '200':
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - data
              - hasMore
            properties:
              data:
                type: array
                description: List of external accounts matching the filter criteria
                items:
                  $ref: ../../components/schemas/external_accounts/ExternalAccount.yaml
              hasMore:
                type: boolean
                description: Indicates if more results are available beyond this page
              nextCursor:
                type: string
                description: >-
                  Cursor to retrieve the next page of results (only present if
                  hasMore is true)
              totalCount:
                type: integer
                description: >-
                  Total number of external accounts matching the criteria (excluding
                  pagination)
    '400':
      description: Bad request - Invalid parameters
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error400.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error401.yaml
    '500':
      description: Internal service error
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error500.yaml

post:
  summary: Add a new external account
  description: >-
    Register a new external bank account for a customer.


    **Sandbox Testing:** In sandbox mode, use these account number patterns to test different transfer scenarios.
    These patterns should be used with the primary alias, address, or identifier of whatever account type you're testing.
    For example, the US account number, a CLABE, an IBAN, a spark wallet address, etc. The failure patterns are:

    - Account numbers ending in **002**: Insufficient funds (transfer-in will fail)

    - Account numbers ending in **003**: Account closed/invalid (transfers will fail)

    - Account numbers ending in **004**: Transfer rejected (bank rejects the transfer)

    - Account numbers ending in **009**: Timeout/delayed failure (stays pending ~30s, then fails)

    - Any other account number: Success (transfers complete normally)
  operationId: createCustomerExternalAccount
  tags:
    - External Accounts
  security:
    - BasicAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../../components/schemas/external_accounts/ExternalAccountCreateRequest.yaml
        examples:
          usBankAccount:
            summary: Create external US bank account
            value:
              customerId: Customer:019542f5-b3e7-1d02-0000-000000000001
              currency: USD
              accountInfo:
                accountType: US_ACCOUNT
                accountNumber: "12345678901"
                routingNumber: "123456789"
                accountCategory: CHECKING
                bankName: Chase Bank
                platformAccountId: ext_acc_123456
                beneficiary:
                  beneficiaryType: INDIVIDUAL
                  fullName: John Doe
                  birthDate: "1990-01-15"
                  nationality: US
                  address:
                    line1: 123 Main Street
                    city: San Francisco
                    state: CA
                    postalCode: "94105"
                    country: US
          sparkWallet:
            summary: Create external Spark wallet
            value:
              customerId: Customer:019542f5-b3e7-1d02-0000-000000000001
              currency: BTC
              accountInfo:
                accountType: SPARK_WALLET
                address: "spark1pgssyuuuhnrrdjswal5c3s3rafw9w3y5dd4cjy3duxlf7hjzkp0rqx6dj6mrhu"
  responses:
    '201':
      description: External account created successfully
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/external_accounts/ExternalAccount.yaml
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error400.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error401.yaml
    '409':
      description: Conflict - External account already exists
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error409.yaml
    '500':
      description: Internal service error
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error500.yaml
